@model HrsVerification.Models.WorkedTime

@if (@ViewBag.IsSAN)
{
    <h2 style="text-align:center">SAN Worked Time</h2>
}
else
{
    <h2 style="text-align:center">Non SAN Worked Time</h2>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    @Html.Hidden("IsSAN", new { IsSAN = ViewBag.IsSAN });        
    @Html.Hidden("TimeVerificationForm", new { TimeVerificationForm = TempData["TimeVerificationForm"] });      
    
    <table class="noborder" width="100%">
        <colgroup>
                <col style="width:35%;" />
                <col style="width:.5em;" />
                <col style="width:20%;" />
                <col style="width:40%;" />
        </colgroup>
        
        <tr><td class="noborder"  colspan="4">
            <hr />
        </td></tr>

        <tr>
            <th class="noborder" style="text-align:right">Schedule From</th>
            <td class="noborder"></td>
            <td class="noborder" >
               @Html.TextBoxFor(m => m.ScheduleFrom,  htmlAttributes: new { style="width:10em" })
                @*  <input type="text" id="LunchFrom" name="LunchFrom" class="date-time">*@
            </td>
        </tr>
        <tr>
            <th class="noborder" style="text-align:right">Schedule To</th>
            <td class="noborder"></td>
            <td class="noborder" >
               @Html.TextBoxFor(m => m.ScheduleTo,  htmlAttributes: new { style="width:10em" })
               @* @Html.TextBoxFor(m => m.ScheduleTo,  htmlAttributes: new { @class="date-time", style="width:10em" }) *@
            </td>
        </tr>

        <tr>
            <th class="noborder" style="text-align:right">Lunch From</th>
            <td colspan="1"class="noborder"></td>
            <td class="noborder">
                @Html.TextBoxFor(m => m.LunchFrom,  htmlAttributes: new { style="width:10em" })
                @* 
                @Html.TextBox("LunchFrom", null, htmlAttributes: new { style="width:5em" })
                *@
            </td>
        </tr>
        <tr>
            <th class="noborder" style="text-align:right">Lunch To</th>
            <td class="noborder"></td>
            <td class="noborder">
                @Html.TextBoxFor(m => m.LunchTo, htmlAttributes: new { style="width:10em" })
                @* 
                @Html.TextBox("LunchTo", null, htmlAttributes: new { style="width:5em" })
                *@
            </td>
        </tr>
        <tr>
            <th class="noborder" style="text-align:right">Minutes</th>
            <td class="noborder"></td>
            <td class="noborder" colspan="1">
               @Html.TextBoxFor(m => m.LunchTime, null, htmlAttributes: new {style="width:3em" })
            </td>
        </tr>

        <tr>
            <th class="noborder" style="text-align:right">Total Worked Hours (minus lunch period)</th>
            <td class="noborder"></td>
            <td class="noborder" colspan="1">
               @Html.TextBoxFor(m => m.TotalHrsWorked, null, htmlAttributes: new {style="width:3em" })
            </td>
        </tr>

        <tr>
            <th class="noborder" style="text-align:right">Worked at (BRANCH, ORG#)</th>
            <td class="noborder"></td>
            <td class="noborder" id="branchesList" class="noborder" >@Html.DropDownList("Branches", null,  new { @onchange="onBranchesChange(this.options[this.selectedIndex].value);" }) 
                <input id="otherBranch" type="text" style="width:10em; display:none"  maxlength="20"/>
            </td>
        </tr>


        @if (@ViewBag.IsSAN == false)
        { 
            <tr>
                <th class="noborder" style="text-align:right">Holiday Time</th>
                <td class="noborder"></td>
                <td class="noborder" colspan="1">
                    @if (@Model == null)
                    { 
                        @Html.TextBoxFor(m => m.HolidayTime, htmlAttributes: new { style = "width:3em", @Value = "0" })
                    }
                    else
                    { 
                        @Html.TextBoxFor(m => m.HolidayTime, htmlAttributes: new { style = "width:3em" })
                    }
                </td>
            </tr>
            
            <tr>
                <th class="noborder" style="text-align:right">Sunday #</th>
                <td class="noborder"></td>
                <td class="noborder" colspan="1">
                    @if (@Model == null)
                    { 
                        @Html.TextBoxFor(m => m.SundayNum, htmlAttributes: new {style="width:3em", @Value = "0" })
                    }
                    else
                    { 
                        @Html.TextBoxFor(m => m.SundayNum, htmlAttributes: new {style="width:3em" })
                    }
                </td>
            </tr>

            <tr>
                <th class="noborder" style="text-align:right">SHA Hours</th>
                <td class="noborder"></td>
                <td class="noborder" colspan="1">
                    @if (@Model == null)
                    { 
                        @Html.TextBoxFor(m => m.SHAHrs, htmlAttributes: new {style="width:3em", @Value = "0" })
                    }
                    else
                    { 
                        @Html.TextBoxFor(m => m.SHAHrs, htmlAttributes: new {style="width:3em" })
                    }
                </td>
            </tr>
        }

        <tr><td class="noborder"><br></td></tr>
        <tr>
            <td class="noborder" colspan="4" style="text-align:center">
                <input type="submit" value="Save" />
            </td>
        </tr>

    @if (!ViewBag.IsSAN)
    { 
    }

    </table>
}

@section scripts {
    @*
    @Scripts.Render("~/bundles/jqueryval")
    *@

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")

    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-timepicker-addon.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //$(".date").datepicker();
            //$('#LunchFrom').Timepicker();
            //$('#LunchFrom').timepicker({ firstDay: 1, dateFormat: 'dd.mm.yy', clickInput: true });
            // $('.date-time').datetimepicker();

            //$('.date-time').datetimepicker({
            //    controlType: 'select',
            //    timeFormat: 'hh:mm tt',
            //    hourMin: 5,
            //    hourMax: 21,
            //    stepHour: 1,
            //    stepMinute: 30,
            //    stepSecond: 0,
            //    onSelect: function (dateText) {
            //        alert($('#ScheduleFrom').val());
            //        //$sD = new Date(dateText);
            //        //$("input#DateTo").datepicker('option', 'minDate', min);
            //    }

            //});

            $('#ScheduleFrom').datetimepicker({
                controlType: 'select',
                timeFormat: 'hh:mm tt',
                hourMin: 5,
                hourMax: 21,
                stepHour: 1,
                stepMinute: 30,
                stepSecond: 0
            });

            $('#ScheduleTo').datetimepicker({
                controlType: 'select',
                timeFormat: 'hh:mm tt',
                hourMin: 5,
                hourMax: 21,
                stepHour: 1,
                stepMinute: 30,
                stepSecond: 0,
                onSelect: function (dateText) {
                    var from = new Date($('#ScheduleFrom').val()).getTime();
                    var to = new Date($('#ScheduleTo').val()).getTime();
                    var diffInMinutes = ((to - from) / 1000) / 60;
                    if (diffInMinutes < 0) {
                        //alert(diffInMinutes);
                        var toDate = from + (3600 * 9 * 1000);      // add 9 hrs
                        $('#ScheduleTo').datetimepicker("setDate", new Date(toDate));
                    }
                    else{
                        $('#TotalHrsWorked').val(diffInMinutes/60);
                    }
                    displayHrsAndLunch();
                }
            });
            $('#ScheduleFrom').blur(function () {
                var from = new Date($('#ScheduleFrom').val()).getTime();
                var toDate = from + (3600 * 9 * 1000);      // add 9 hrs
                $('#ScheduleTo').datetimepicker("setDate", new Date(toDate));
                $('#TotalHrsWorked').val(9);
                $('#LunchFrom').datetimepicker("setDate", new Date(from));
                $('#LunchTo').datetimepicker("setDate", new Date(from + (1800 * 1000)));

                displayHrsAndLunch();
            });
            /*
            $('#ScheduleTo').select(function () {
                var from = new Date($('#ScheduleFrom').val()).getTime();
                var to = new Date($('#ScheduleTo').val()).getTime();
                var diffInMinutes = ((to - from) / 1000) / 60;
                if (diffInMinutes < 0) {
                    alert("from < to");
                    var toDate = from + (3600 * 9 * 1000);      // add 9 hrs
                    $('#ScheduleTo').datetimepicker("setDate", new Date(toDate));
                }
            });
            */

            $('#ScheduleTo').blur(function () {
                var from = new Date($('#ScheduleFrom').val()).getTime();
                var to = new Date($('#ScheduleTo').val()).getTime();
                var diffInMinutes = ((to - from) / 1000) / 60;
                //alert(diffInMinutes);
                $('#TotalHrsWorked').val(diffInMinutes/60);
            });

            /*
            $('#ScheduleTo').click(function ()
            {
                //alert($('#ScheduleFrom').val());
                $('#ScheduleTo').datetimepicker("setDate", new Date($('#ScheduleFrom').val()));

            });
            */

            /*
            $('#ScheduleTo').datetimepicker({
                controlType: 'select',
                timeFormat: 'hh:mm tt',
                hourMin: 5,
                hourMax: 21,
                stepHour: 1,
                stepMinute: 30,
                stepSecond: 0,
                onSelect: function (dateText) {
                    alert($('#ScheduleFrom').val());
                    //$sD = new Date(dateText);
                    //$("input#DateTo").datepicker('option', 'minDate', min);
                }
            });
            */


            $('#LunchFrom').datetimepicker({
                controlType: 'select',
                timeFormat: 'hh:mm tt',
                hourMin: 5,
                hourMax: 21,
                stepHour: 1,
                stepMinute: 30,
                stepSecond: 0,
                onSelect: function (dateText) {
                    var to = new Date($('#LunchTo').val()).getTime();
                    var from = new Date(dateText).getTime();
                    var diffInMinutes = ((to - from) / 1000) / 60;
                    //alert(diffInMinutes);
                    if (diffInMinutes < 0) {
                        var toDate = from + (1800 * 1000);      // add 30 mins
                        $('#LunchTo').datetimepicker("setDate", new Date(toDate));
                    }
                    else {
                        $('#LunchTime').val(diffInMinutes / 60);
                    }
                    displayHrsAndLunch();
                }
            });

            $('#LunchFrom').blur(function () {
                displayHrsAndLunch();
            });

            $('#LunchTo').datetimepicker({
                controlType: 'select',
                timeFormat: 'hh:mm tt',
                hourMin: 6,
                hourMax: 20,
                stepHour: 1,
                stepMinute: 30,
                stepSecond: 0,
                onSelect: function (dateText) {
                    var from = new Date($('#LunchFrom').val()).getTime();
                    //var to = new Date($('#LunchTo').val()).getTime();
                    var to = new Date(dateText).getTime();
                    var diffInMinutes = ((to - from) / 1000) / 60;
                    //alert(diffInMinutes);
                    if (diffInMinutes < 0) {
                        var toDate = from + (1800 * 1000);      // add 30 mins
                        $('#LunchTo').datetimepicker("setDate", new Date(toDate));
                    }
                    else {
                        $('#LunchTime').val(diffInMinutes / 60);
                    }
                    displayHrsAndLunch();
                }
            });

            $('#LunchTo').blur(function () {
                displayHrsAndLunch();
            });
        });
    </script>

    <script type="text/javascript">
        function displayHrsAndLunch() {
            var fromInMs = new Date($('#ScheduleFrom').val()).getTime();
            var toInMs = new Date($('#ScheduleTo').val()).getTime();
            var lunchFromInMs = new Date($('#LunchFrom').val()).getTime();
            var lunchToInMs = new Date($('#LunchTo').val()).getTime();

            var lunchInHrs = (lunchToInMs - lunchFromInMs) / 3600000;
            $('#LunchTime').val(lunchInHrs * 60);

            var workedTimeInHrs = (toInMs - fromInMs) / 3600000;
            $('#TotalHrsWorked').val(workedTimeInHrs - lunchInHrs);

            //alert("lunch: " + lunchInHrs + " - Work: " + workedTimeInHrs);
            /*
            var from = new Date($('#LunchFrom').val()).getTime();
            var toDate = from + (1800 * 1000);      // add 30 mins
            $('#LunchTo').datetimepicker("setDate", new Date(toDate));

            var totalHrsWorked = $('#TotalHrsWorked').val();
           //  alert(totalHrsWorked);

            // alert(toDate - from);
            var lunch = (toDate - from) / 3600000;
            //alert(lunch);
            $('#LunchTime').val(lunch * 60);

            totalHrsWorked = totalHrsWorked - lunch;
            $('#TotalHrsWorked').val(totalHrsWorked);
            */
        }
    </script>

    <script type="text/javascript">
        function onBranchesChange(value) {
            //alert(value);
            //string val = value;
            if (value == "OTHER")        // BRANCH: OTHER
                $("#otherBranch").show();
            else
                $("#otherBranch").css('display', 'none');
        }
    </script>
}
